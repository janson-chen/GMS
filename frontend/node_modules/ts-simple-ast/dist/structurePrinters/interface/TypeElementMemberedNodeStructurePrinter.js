"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../../utils");
var StructurePrinter_1 = require("../StructurePrinter");
var CallSignatureDeclarationStructurePrinter_1 = require("./CallSignatureDeclarationStructurePrinter");
var ConstructSignatureDeclarationStructurePrinter_1 = require("./ConstructSignatureDeclarationStructurePrinter");
var IndexSignatureDeclarationStructurePrinter_1 = require("./IndexSignatureDeclarationStructurePrinter");
var MethodSignatureStructurePrinter_1 = require("./MethodSignatureStructurePrinter");
var PropertySignatureStructurePrinter_1 = require("./PropertySignatureStructurePrinter");
var TypeElementMemberedNodeStructurePrinter = /** @class */ (function (_super) {
    __extends(TypeElementMemberedNodeStructurePrinter, _super);
    function TypeElementMemberedNodeStructurePrinter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.callSignatureWriter = new CallSignatureDeclarationStructurePrinter_1.CallSignatureDeclarationStructurePrinter(_this.writer);
        _this.constructSignatureWriter = new ConstructSignatureDeclarationStructurePrinter_1.ConstructSignatureDeclarationStructurePrinter(_this.writer);
        _this.indexSignatureWriter = new IndexSignatureDeclarationStructurePrinter_1.IndexSignatureDeclarationStructurePrinter(_this.writer);
        _this.methodWriter = new MethodSignatureStructurePrinter_1.MethodSignatureStructurePrinter(_this.writer);
        _this.propertyWriter = new PropertySignatureStructurePrinter_1.PropertySignatureStructurePrinter(_this.writer);
        return _this;
    }
    TypeElementMemberedNodeStructurePrinter.prototype.printText = function (structure) {
        this.callSignatureWriter.printTexts(structure.callSignatures);
        this.conditionalSeparator(structure.constructSignatures);
        this.constructSignatureWriter.printTexts(structure.constructSignatures);
        this.conditionalSeparator(structure.indexSignatures);
        this.indexSignatureWriter.printTexts(structure.indexSignatures);
        this.conditionalSeparator(structure.properties);
        this.propertyWriter.printTexts(structure.properties);
        this.conditionalSeparator(structure.methods);
        this.methodWriter.printTexts(structure.methods);
    };
    TypeElementMemberedNodeStructurePrinter.prototype.conditionalSeparator = function (structures) {
        if (!utils_1.ArrayUtils.isNullOrEmpty(structures) && !this.writer.isAtStartOfFirstLineOfBlock())
            this.writer.newLine();
    };
    return TypeElementMemberedNodeStructurePrinter;
}(StructurePrinter_1.StructurePrinter));
exports.TypeElementMemberedNodeStructurePrinter = TypeElementMemberedNodeStructurePrinter;
