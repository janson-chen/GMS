"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var formatting_1 = require("../formatting");
var StructurePrinter_1 = require("../StructurePrinter");
var NamedImportExportSpecifierStructurePrinter_1 = require("./NamedImportExportSpecifierStructurePrinter");
var ExportDeclarationStructurePrinter = /** @class */ (function (_super) {
    __extends(ExportDeclarationStructurePrinter, _super);
    function ExportDeclarationStructurePrinter(writer, formatSettings) {
        var _this = _super.call(this, writer) || this;
        _this.formatSettings = formatSettings;
        _this.multipleWriter = new formatting_1.NewLineFormattingStructuresPrinter(_this.writer, _this);
        _this.namedImportExportSpecifierStructurePrinter = new NamedImportExportSpecifierStructurePrinter_1.NamedImportExportSpecifierStructurePrinter(writer, formatSettings);
        return _this;
    }
    ExportDeclarationStructurePrinter.prototype.printTexts = function (structures) {
        this.multipleWriter.printText(structures);
    };
    ExportDeclarationStructurePrinter.prototype.printText = function (structure) {
        var hasModuleSpecifier = structure.moduleSpecifier != null && structure.moduleSpecifier.length > 0;
        this.writer.write("export");
        if (structure.namedExports != null && structure.namedExports.length > 0) {
            this.writer.space();
            this.namedImportExportSpecifierStructurePrinter.printTextsWithBraces(structure.namedExports);
        }
        else if (!hasModuleSpecifier)
            this.writer.write(" {")
                .conditionalWrite(this.formatSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces, " ") // compiler does this
                .write("}");
        else
            this.writer.write(" *");
        if (hasModuleSpecifier) {
            this.writer.write(" from ");
            this.writer.quote(structure.moduleSpecifier);
        }
        this.writer.write(";");
    };
    return ExportDeclarationStructurePrinter;
}(StructurePrinter_1.StructurePrinter));
exports.ExportDeclarationStructurePrinter = ExportDeclarationStructurePrinter;
