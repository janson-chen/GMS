"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var expression_1 = require("../expression");
var JsxFragment = /** @class */ (function (_super) {
    __extends(JsxFragment, _super);
    function JsxFragment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Gets the children of the JSX fragment.
     */
    JsxFragment.prototype.getJsxChildren = function () {
        var _this = this;
        return this.compilerNode.children.map(function (c) { return _this.getNodeFromCompilerNode(c); });
    };
    /**
     * Gets the opening fragment.
     */
    JsxFragment.prototype.getOpeningFragment = function () {
        return this.getNodeFromCompilerNode(this.compilerNode.openingFragment);
    };
    /**
     * Gets the closing fragment.
     */
    JsxFragment.prototype.getClosingFragment = function () {
        return this.getNodeFromCompilerNode(this.compilerNode.closingFragment);
    };
    return JsxFragment;
}(expression_1.PrimaryExpression));
exports.JsxFragment = JsxFragment;
