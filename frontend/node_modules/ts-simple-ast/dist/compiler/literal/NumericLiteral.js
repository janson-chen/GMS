"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var manipulation_1 = require("../../manipulation");
var expression_1 = require("../expression");
exports.NumericLiteralBase = expression_1.LiteralExpression;
var NumericLiteral = /** @class */ (function (_super) {
    __extends(NumericLiteral, _super);
    function NumericLiteral() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Gets the literal value.
     */
    NumericLiteral.prototype.getLiteralValue = function () {
        var text = this.compilerNode.text;
        if (text.indexOf(".") >= 0)
            return parseFloat(text);
        return parseInt(text, 10);
    };
    /**
     * Sets the literal value.
     * @param value - Value to set.
     */
    NumericLiteral.prototype.setLiteralValue = function (value) {
        manipulation_1.replaceNodeText({
            sourceFile: this.sourceFile,
            start: this.getStart(),
            replacingLength: this.getWidth(),
            newText: value.toString(10)
        });
        return this;
    };
    return NumericLiteral;
}(exports.NumericLiteralBase));
exports.NumericLiteral = NumericLiteral;
