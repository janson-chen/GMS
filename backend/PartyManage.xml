<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PartyManage</name>
    </assembly>
    <members>
        <member name="T:PartyManage.Authorization.UserManagementOperations">
            <summary>
            PolicyOperation Policy to allow adding, viewing, updating and deleting general or specific user records.
            </summary>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetCurrentUser">
            <summary>
            获取当前用户信息
            </summary>
            <remarks>
            调用例子  
            
                Get Account/Users/Me
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetUserById(System.String)">
            <summary>
            通过Id获取用户信息
            </summary>
            <remarks>
            调用例子  
            
                Get Account/Users/Id=55424177-56ea-442b-864c-d6cdaf2a2306
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetUserByUserName(System.String)">
            <summary>
            通过登陆名获取用户信息
            </summary>
            <remarks>
            调用例子  
            
                Get Account/Users/UserName=Admin
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetUsers(System.Int32,System.Int32)">
            <summary>
            获取所有用户信息（分页）
            </summary>
            <param name="page">页数</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get Account/Users/Page=1/PageSize=20
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.Login(PartyManage.ViewModels.Account.LoginViewModel)">
            <summary>
            登陆方法
            </summary>
            <param name="user">用户模型</param>
            <remarks>
            调用例子  
            
                POST /Account/Login
                {
                   "userName": "Admin",
                   "passwordHash": "Mima@123456",
                   "rememberMe":"True"
                }
            
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.Register(PartyManage.ViewModels.Account.UserEditViewModel)">
            <summary>
            注册用户
            </summary>
            <param name="user">用户模型</param>
            <remarks>
            调用例子(初始密码Mima@123456)  
            
                POST /Account/Register
                {
                   {
                     "userName": "Admin",
                     "name": "系统管理员",
                     "communityID": 1,
                     "isEnabled": true,
                     "roles": [
                       "Administrator"
                      ]
                   }
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.Logout">
            <summary>
            注销用户
            </summary>
            <remarks>
            调用例子  
            
                POST /Account/Logout
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.ResetPassword(PartyManage.ViewModels.Account.PasswordViewModel)">
            <summary>
            重置密码
            </summary>
            <param name="user">用户密码模型</param>
            <remarks>
            调用例子  
            
                POST /Account/Users/ResetPassword
                {               
                   {
                     "userName": "User",
                     "newPassword": "Mima@4444"
                   }
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.UpdatePassword(PartyManage.ViewModels.Account.PasswordViewModel)">
            <summary>
            更新密码
            </summary>
            <param name="user">用户密码模型</param>
            <remarks>
            调用例子  
            
                POST /Account/Users/UpdatePassword
                {               
                   "userName": "User",
                   "currentPassword": "Mima@4444",
                   "newPassword": "Mima@123456"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.UpdateUser(System.String,PartyManage.ViewModels.Account.UserEditViewModel)">
            <summary>
            按id更新用户
            </summary>
            <param name="user">用户修改模型</param>
            <param name="Id">用户Id</param>
            <remarks>
            调用例子  
            
                Put /Account/Users/Id=55424177-56ea-442b-864c-d6cdaf2a2306
                {          
                   "id": "55424177-56ea-442b-864c-d6cdaf2a2306",
                   "userName": "User",
                   "name": "普通用户",
                   "email": "123456@qq.com",
                   "phoneNumber": "12345",
                   "communityID": 2,
                   "isEnabled": true,
                   "roles": [
                              "User",
                              "Administrator"
                            ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.UpdateCurrentUser(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Account.UserPatchViewModel})">
            <summary>
            修改当前用户信息
            </summary>
            <param name="patch">用户部分模型</param>
            <remarks>
            调用例子  
            
                Patch /Account/Users/Id=55424177-56ea-442b-864c-d6cdaf2a2306
                {  
                   [
                     { "op" : "replace", "path" : "/Email", "value" : "123456@qq.com" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.UpdateUser(System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Account.UserPatchViewModel})">
            <summary>
            按用户Id做部分修改
            </summary>
            <param name="patch">用户部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Patch /Account/Users/Id=55424177-56ea-442b-864c-d6cdaf2a2306
                {  
                   [
                     { "op" : "replace", "path" : "/IsEnabled", "value" : "false" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.DeleteUser(System.String)">
            <summary>
            按用户Id删除用户
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /Account/Users/Id=55424177-56ea-442b-864c-d6cdaf2a2306
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.UnblockUser(System.String)">
            <summary>
            按用户Id解锁用户
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /Account/Users/Unblock/Id=55424177-56ea-442b-864c-d6cdaf2a2306
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetRoleById(System.String)">
            <summary>
            按角色Id获取角色
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /Account/Roles/Id=55424177-56ea-442b-864c-d6cdaf2a2306
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetRoleByName(System.String)">
            <summary>
            按角色名获取角色
            </summary>
            <param name="Name">角色名</param>
            <remarks>
            调用例子  
            
                Get /Account/Roles/Name=User
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetRoles(System.Int32,System.Int32)">
            <summary>
            按全部角色列表（分页）
            </summary>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Account/Roles/Page=1/PageSize=20
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.UpdateRole(System.String,PartyManage.ViewModels.Account.RoleViewModel)">
            <summary>
            按Id更新角色信息
            </summary>
            <param name="Id">角色Id</param>
            <param name="role">角色模型</param>
            <remarks>
            调用例子  
            
                Put /Account/Roles/Id=fca68848-ff04-4592-a860-8fd2ab073d6d
                {
                   {
                     "id":"fca68848-ff04-4592-a860-8fd2ab073d6d"
                     "name": "User",
                     "description": "普通用户",
                     "uersCount": 0,
                     "permissions": [
                             {
                                 "name": "查看用户",
                                 "value": "users.view",
                                 "groupName": "用户权限",
                                 "description": "查看其他用户信息"
                              }
                      ]
                   }
                }    
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.CreateRole(PartyManage.ViewModels.Account.RoleViewModel)">
            <summary>
            创建角色
            </summary>
            <param name="role">角色模型</param>
            <remarks>
            调用例子  
            
                Post /Account/Roles
                   {
                     "name": "TestUser",
                     "description": "测试角色",
                     "uersCount": 0,
                     "permissions": [
                             {
                                 "name": "查看用户",
                                 "value": "users.view",
                                 "groupName": "用户权限",
                                 "description": "查看其他用户信息"
                              }
                      ]
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.DeleteRole(System.String)">
            <summary>
            按Id删除角色信息
            </summary>
            <param name="Id">角色Id</param>
            <remarks>
            调用例子  
            
                Delete /Account/Roles/Id=55424177-56ea-442b-864c-d6cdaf2a2306
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AccountController.GetAllPermissions">
            <summary>
            获取全部角色权限
            </summary>
            <remarks>
            调用例子  
            
                Get /Account/Permissions
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AlertsController.CreateAlert(System.Int32,PartyManage.ViewModels.System.AlertViewModel)">
            <summary>
            创建通知
            </summary>
            <param name="alert">通知模型</param>
            <param name="userMemberID">用户组Id</param>
            <remarks>
            调用例子  
            
                Post /Alert
                   {
                     "content": "通知内容XX",
                     "url": "#"
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AlertsController.GetAlertDetail(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            当前用户id获取通知
            </summary>
            <param name="UserId">UserId</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <param name="isConsult">是/否已查阅</param>
            <remarks>
            调用例子  
            
                Get /Alert/AlertDetail/Id=XX/Page=1/PageSize=20?isConsult=true
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.AlertsController.UpdateAlertDetail(System.Int32)">
            <summary>
            更新用户查阅状态
            </summary>
            <param name="Id">消息实际对象Id</param>
            <remarks>
            调用例子
               
                Post /Alert/AlertDetail/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.CreateEvent(PartyManage.ViewModels.Business.EventViewModel)">
            <summary>
            创建事件表
            </summary>
            <param name="Event">事件表模型</param>
            <remarks>
            调用例子  
            
                Post /Business/Event
                   {
                     "communityID": 1,
                     "name": "事件1",
                     "happenDate":"2018-07-20 00:00:00",
                     "eventType":"普通",
                     "area":"XXX",
                     "content":"XXX",
                     "isSendMessage":true,
                     "userMemberID":1
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetEvents(System.Int32,System.Int32,DAL.QueryModels.EventQueryModel)">
            <summary>
            按条件筛选事件表列表（分页）
            </summary>
            <param name="eventQuery">查询模型</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/Event/Query/Page=1/PageSize=20
                {
                   "communityName": "XXX",
                   "name":"XXX",
                   "happenDate":"2018-07-11 00:00:00",
                   "startHappenDate": "2018-07-11 00:00:00",
                   "endHappenDate":"2018-07-13 23:59:59",
                   "eventType":"普通",
                   "area":"XXX",
                   "orderBy": "Name"
                }
                
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetEvent(System.Int32)">
            <summary>
            按Id获取事件表
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Event/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateEvent(System.Int32,PartyManage.ViewModels.Business.EventViewModel)">
            <summary>
            事件表修改
            </summary>
            <param name="Event">事件表模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /Business/Event/Id=1
                {   
                   "id":1,
                   "communityID": 1,
                   "name": "事件1",
                   "happenDate":"2018-07-20 00:00:00",
                   "eventType":"普通",
                   "area":"XXX",
                   "content":"XXX",
                   "isSendMessage":true,
                   "userMemberID":1
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchEvent(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.EventViewModel})">
            <summary>
            事件表部分修改
            </summary>
            <param name="patch">事件表模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/Event/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/Name", "value" : "事件XX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteEvent(System.Int32)">
            <summary>
            按Id删除事件表
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /Business/Event/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UploadMenuFile(System.Int32)">
            <summary>
            创建事件表附件
            </summary>
            <param name="Id">事件表Id</param>
            <remarks>
            调用例子  
            
                Post /Business/Event/UploadFile/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetEventFilesList(System.Int32)">
            <summary>
            按事件表Id获取附件
            </summary>
            <param name="EventId">Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Event/GetFile/EventId=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteEventFile(System.Int32)">
            <summary>
            按事件表附件Id删除附件
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /Business/Event/DeleteFile/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.CreateActivities(PartyManage.ViewModels.Business.PartyActivitiesViewModel)">
            <summary>
            创建活动表
            </summary>
            <param name="partyActivities">活动表模型</param>
            <remarks>
            调用例子  
            
                Post /Business/PartyActivities
                   {
                     "communityID": 1,
                     "subject": "主题XX",
                     "activitiesDate":"2018-07-20 00:00:00",
                     "activitiesPlace":"XX",
                     "joinAmount":1,
                     "realAmount":1,
                     "leaveAmount":1,
                     "form":"活动形式XX",
                     "content":"活动内容XX"
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetActivitiesList(System.Int32,System.Int32,DAL.QueryModels.ActivityQueryModel)">
            <summary>
            按条件筛选活动表列表（分页）
            </summary>
            <param name="activityQuery">查询模型</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/PartyActivities/Query/Page=1/PageSize=20
                {
                   "subject": "XXX",
                   "orderBy": "Name"
                }
                
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetActivities(System.Int32)">
            <summary>
            按Id获取活动表
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /Business/PartyActivities/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateActivities(System.Int32,PartyManage.ViewModels.Business.PartyActivitiesViewModel)">
            <summary>
            活动表修改
            </summary>
            <param name="partyActivities">活动表模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /Business/PartyActivities/Id=1
                {   
                   "id":1,
                   "communityID": 1,
                   "subject": "主题XX",
                   "activitiesDate":"2018-07-20 00:00:00",
                   "activitiesPlace":"XX",
                   "joinAmount":1,
                   "realAmount":1,
                   "leaveAmount":1,
                   "form":"活动形式XX",
                   "content":"活动内容XX"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchActivities(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.PartyActivitiesViewModel})">
            <summary>
            活动表部分修改
            </summary>
            <param name="patch">活动表模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/PartyActivities/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/Subject", "value" : "主题XX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteActivities(System.Int32)">
            <summary>
            按Id删除活动表
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /Business/PartyActivities/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.CreatePopulation(PartyManage.ViewModels.Business.EventViewModel)">
            <summary>
            创建网格登记表
            </summary>
            <param name="population">网格表模型</param>
            <remarks>
            调用例子  
            
                Post /Business/Population
                   {
                     "code":"XXX",
                     "communityID": 1,
                     "family_Type": "XX",
                     "family_Address":"XXX",
                     "family_Phone":"XX",
                     "family_Content":"家庭情况XXX"
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetPopulationList(System.Int32,System.Int32,DAL.QueryModels.PopulationQueryModel)">
            <summary>
            按条件筛选网格登记表列表（分页）
            </summary>
            <param name="populationQuery">查询模型</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Query/Page=1/PageSize=20
                {
                   "communityName": "XXX",
                   "code":"XXX",
                   "family_Type":"XX",
                   "family_Address":"XX",
                   "orderBy": "Name"
                }
                
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetPopulation(System.Int32)">
            <summary>
            按Id获取网格登记表
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateEvent(System.Int32,PartyManage.ViewModels.Business.PopulationViewModel)">
            <summary>
            网格登记表修改
            </summary>
            <param name="population">网格登记表模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /Business/Population/Id=1
                {   
                   "id":1,
                   "code":"XXX",
                   "communityID": 1,
                   "family_Type": "XX",
                   "family_Address":"XXX",
                   "family_Phone":"XX",
                   "family_Content":"家庭情况XXX"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchEvent(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.PopulationViewModel})">
            <summary>
            网格登记表部分修改
            </summary>
            <param name="patch">网格登记表模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/Population/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/Code", "value" : "XXX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeletePopulation(System.Int32)">
            <summary>
            按Id删除网格登记表
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /Business/Population/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.CreateFamilyList(System.String,System.Collections.Generic.List{PartyManage.ViewModels.Business.FamilyViewModel})">
            <summary>
            创建多个家庭人员信息
            </summary>
            <param name="families">家庭人员模型</param>
            <param name="code">主表的编号</param>
            <remarks>
            调用例子  
            
                Post /Business/Population/Families/code=XXX
                   {
                     [
                        { "populationID": 1,
                          "personName": "张三",
                          "cardNo":"XXXX",
                          "sex":"男",
                          "nation":"汉族",
                          "birthDate":"2018-07-20 00:00:00",
                          "politicalStatus":"XX",
                          "relation":"XX",
                          "registeredResidence":"XX",
                          "nativePlace":"XX",
                          "peopleType":"XX",
                          "culture":"XX",
                          "marriage":"XX",
                          "rmks":"XX"
                        },
                        { "populationID": 1,
                          "personName": "李四",
                          "cardNo":"XXXX",
                          "sex":"男",
                          "nation":"汉族",
                          "birthDate":"2018-07-20 00:00:00",
                          "politicalStatus":"XX",
                          "relation":"XX",
                          "registeredResidence":"XX",
                          "nativePlace":"XX",
                          "peopleType":"XX",
                          "culture":"XX",
                          "marriage":"XX",
                          "rmks":"XX"
                        }            
                     ]
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetFamilyList(System.Int32,System.Int32,System.Int32)">
            <summary>
            按网格登记表id获取家庭人员信息(分页)
            </summary>
            <param name="populationId">网格登记表Id</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Families/PopulationId=1/Page=1/PageSize=20          
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetFamilyAsync(System.Int32)">
            <summary>
            根据id获取家庭人员成员
            </summary>
            <param name="Id">家庭人员Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Families/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateFamilies(System.String,System.Collections.Generic.List{PartyManage.ViewModels.Business.FamilyViewModel})">
            <summary>
            家庭人员信息修改
            </summary>
            <param name="families">家庭人员信息模型</param>
            <param name="code">主表的编号</param>
            <remarks>
            调用例子  
            
                Put /Business/Population/Families/code=XXX
                {   
                     [
                        { "id":1,
                          "populationID": 1,
                          "personName": "张三",
                          "cardNo":"XXXX",
                          "sex":"男",
                          "nation":"汉族",
                          "birthDate":"2018-07-20 00:00:00",
                          "politicalStatus":"XX",
                          "relation":"XX",
                          "registeredResidence":"XX",
                          "nativePlace":"XX",
                          "peopleType":"XX",
                          "culture":"XX",
                          "marriage":"XX",
                          "rmks":"XX"
                        },
                        { "id":2,
                          "populationID": 1,
                          "personName": "李四",
                          "cardNo":"XXXX",
                          "sex":"男",
                          "nation":"汉族",
                          "birthDate":"2018-07-20 00:00:00",
                          "politicalStatus":"XX",
                          "relation":"XX",
                          "registeredResidence":"XX",
                          "nativePlace":"XX",
                          "peopleType":"XX",
                          "culture":"XX",
                          "marriage":"XX",
                          "rmks":"XX"
                        }            
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchFamily(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.FamilyViewModel})">
            <summary>
            家庭人员信息部分修改
            </summary>
            <param name="patch">家庭人员部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/Population/Family/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/PersonName", "value" : "张三" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteFamilies(System.Collections.Generic.List{System.Int32})">
            <summary>
            删除家庭人员信息
            </summary>
            <param name="ids">家庭人员id集合</param>
            <remarks>
            调用例子  
            
                Delete /Business/Population/Families
                {   
                     [
                        {"id":1 },
                        {"id":2 }    
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetArmyList(System.Int32,System.Int32,System.Int32)">
            <summary>
            按网格登记表id获取兵役信息(分页)
            </summary>
            <param name="populationId">网格登记表Id</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Armies/PopulationId=1/Page=1/PageSize=20          
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetArmyAsync(System.Int32)">
            <summary>
            根据id获取兵役信息
            </summary>
            <param name="Id">家庭人员Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Armies/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateArmies(System.Collections.Generic.List{PartyManage.ViewModels.Business.ArmyViewModel})">
            <summary>
            兵役信息修改
            </summary>
            <param name="armies">兵役模型</param>
            <remarks>
            调用例子  
            
                Put /Business/Population/Armies
                {   
                     [
                        { "id": 1,
                          "armyType":"XXXX",
                          "joinDate":"2018-07-20 00:00:00",
                          "isQuit":false
                        },
                        { "id": 2,
                          "armyType":"XXXX",
                          "joinDate":"2018-07-20 00:00:00",
                          "isQuit":true
                        }          
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchArmy(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.ArmyViewModel})">
            <summary>
            兵役信息部分修改
            </summary>
            <param name="patch">兵役部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/Population/Army/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/ArmyType", "value" : "XXX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteArmies(System.Collections.Generic.List{System.Int32})">
            <summary>
            删除兵役信息
            </summary>
            <param name="Ids">家庭人员id集合</param>
            <remarks>
            调用例子  
            
                Delete /Business/Population/Armies
                {   
                     [
                        {"id":1 },
                        {"id":2 }    
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetDisabilityList(System.Int32,System.Int32,System.Int32)">
            <summary>
            按网格登记表id获取残疾信息(分页)
            </summary>
            <param name="populationId">网格登记表Id</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Disabilities/PopulationId=1/Page=1/PageSize=20          
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetDisabilityAsync(System.Int32)">
            <summary>
            根据id获取残疾信息
            </summary>
            <param name="Id">家庭人员Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Disabilities/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateDisabilities(System.Collections.Generic.List{PartyManage.ViewModels.Business.DisabilityViewModel})">
            <summary>
            残疾信息修改
            </summary>
            <param name="disabilities">残疾模型</param>
            <remarks>
            调用例子  
            
                Put /Business/Population/Disabilities
                {   
                     [
                        { "id": 1,
                          "disabilityType":"XXXX",
                          "disabilityGrade":"XXX"
                        },
                        { "id": 2,
                          "disabilityType":"XXXX",
                          "disabilityGrade":"XXX"
                        }        
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchDisability(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.DisabilityViewModel})">
            <summary>
            残疾信息部分修改
            </summary>
            <param name="patch">残疾部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/Population/Disability/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/DisabilityType", "value" : "XXX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteDisabilities(System.Collections.Generic.List{System.Int32})">
            <summary>
            删除残疾信息
            </summary>
            <param name="Ids">家庭人员id集合</param>
            <remarks>
            调用例子  
            
                Delete /Business/Population/Disabilities
                {   
                     [
                        {"id":1 },
                        {"id":2 }    
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetPartyList(System.Int32,System.Int32,System.Int32)">
            <summary>
            按网格登记表id获取党派信息(分页)
            </summary>
            <param name="populationId">网格登记表Id</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Parties/PopulationId=1/Page=1/PageSize=20          
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.GetPartyAsync(System.Int32)">
            <summary>
            根据id获取党派信息
            </summary>
            <param name="Id">家庭人员Id</param>
            <remarks>
            调用例子  
            
                Get /Business/Population/Parties/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.UpdateParties(System.Collections.Generic.List{PartyManage.ViewModels.Business.PartyViewModel})">
            <summary>
            党派信息修改
            </summary>
            <param name="parties">党派模型</param>
            <remarks>
            调用例子  
            
                Put /Business/Population/Parties
                {   
                     [
                        { "id": 1,
                          "partyType":"XXXX",
                          "joinDate":"2018-07-20 00:00:00",
                          "partyFrom":"XX",
                          "duties":"XX",
                          "isFlow":true
                        },
                        { "id": 2,
                          "partyType":"XXXX",
                          "joinDate":"2018-07-20 00:00:00",
                          "partyFrom":"XX",
                          "duties":"XX",
                          "isFlow":false
                        }           
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.PatchParty(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.Business.PartyViewModel})">
            <summary>
            党派信息部分修改
            </summary>
            <param name="patch">党派部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Business/Population/Party/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/PartyType", "value" : "XXX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.BusinessController.DeleteParties(System.Collections.Generic.List{System.Int32})">
            <summary>
            删除党派信息
            </summary>
            <param name="Ids">家庭人员id集合</param>
            <remarks>
            调用例子  
            
                Delete /Business/Population/Parties
                {   
                     [
                        {"id":1 },
                        {"id":2 }    
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.CreateMenu(PartyManage.ViewModels.System.CommunityViewModel)">
            <summary>
            创建社区
            </summary>
            <param name="community">社区模型</param>
            <remarks>
            调用例子  
            
                Post /Community
                   {
                     "name": "社区XX",
                     "parentID": 1
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.GetLogs(System.Int32,System.Int32,DAL.QueryModels.CommunityQueryModel)">
            <summary>
            按条件筛选社区列表（分页）
            </summary>
            <param name="communityQuery">查询模型</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Post /Community/Query/Page=1/PageSize=20
                {
                   "name": "XXX",
                   "orderBy": "Name"
                }
                
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.GetCommunity(System.Int32)">
            <summary>
            按Id获取社区
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /Community/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.GetCommunity(System.String)">
            <summary>
            按社区名获取社区
            </summary>
            <param name="name">name</param>
            <remarks>
            调用例子  
            
                Get /Community/Name=社区XX
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.GetCommunityListById(System.Int32)">
            <summary>
            通过社区Id获取社区下所有社区合集
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /Community/ChildList/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.UpdateCommunity(System.Int32,PartyManage.ViewModels.System.CommunityViewModel)">
            <summary>
            社区修改
            </summary>
            <param name="community">社区模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /Community/Id=1
                {   
                   "id":1,
                   "name": "社区XX",
                   "parentID": 1
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.PatchCommunity(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.System.CommunityViewModel})">
            <summary>
            社区部分修改
            </summary>
            <param name="patch">社区模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /Community/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/Name", "value" : "社区XX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.CommunityController.DeleteMenu(System.Int32)">
            <summary>
            按Id删除社区
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /Community/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.LogsController.GetLogs(System.Int32,System.Int32,DAL.QueryModels.LogQueryModel)">
            <summary>
            按条件查看日志列表（分页）
            </summary>
            <param name="logQuery">查询模型</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /Logs/Query/Page=1/PageSize=20
                {
                   "startDate": "2018-07-11 00:00:00",
                   "endDate":"2018-07-13 23:59:59",
                   "orderBy": "LogType"
                }
                
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.LogsController.ExportLogs(DAL.QueryModels.LogQueryModel)">
            <summary>
            按日期导出日志
            </summary>
            <param name="logQuery">查询模型</param>
            <remarks>
            调用例子  
            
                Post /Logs/Export
                {
                   "startDate": "2018-07-11 00:00:00",
                   "endDate":"2018-07-13 23:59:59",
                }
                
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetBasicSetting(System.Int32)">
            <summary>
            获取基本系统设置
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Get /System/BasicSetting/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.UpdateBasicSetting(System.Int32,PartyManage.ViewModels.System.BasicViewModel)">
            <summary>
            系统基本设置修改
            </summary>
            <param name="basicSetting">系统设置模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /System/BasicSetting/Id=1
                {   
                   "id":1,
                   "name": "党群管理系统",
                   "outSoftwarePath":"D:\\aaaa\\",
                   "filePath": "D:\\PartyFile\\",
                   "logPath": "D:\\PartyLog\\Log.txt",
                   "fileMaxSize": 1024
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.PatchBasicSetting(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.System.BasicViewModel})">
            <summary>
            系统基本设置外接程序修改
            </summary>
            <param name="patch">系统设置部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子,可修改｛OutSoftwarePath:"外接程序路径",FileMaxSize:"允许上传的附件最大值",FilePath:"附件上传路径",LogPath:"日志导出路径"}
               
                Patch /System/BasicSetting/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/OutSoftwarePath", "value" : "D:\\aaaa\\" },
                     { "op" : "replace", "path" : "/FileMaxSize", "value" : "1024" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetFile(System.Int32,System.Boolean)">
            <summary>
            附件下载
            </summary>
            <param name="Id">Id</param>
            <param name="isStream">是否数据流</param>
            <remarks>
            调用例子（isStream数据流方式）  
            
                Get /System/File/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetMenus">
            <summary>
            获取菜单树结构
            </summary>
            <remarks>
            调用例子  
            
                Get /System/Menus
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetMenuById(System.Int32)">
            <summary>
            根据id获取菜单
            </summary>
            <param name="Id">菜单Id</param>
            <remarks>
            调用例子  
            
                Get /System/Menu/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.CreateMenu(PartyManage.ViewModels.System.MenuViewModel)">
            <summary>
            创建菜单
            </summary>
            <param name="menu">菜单模型</param>
            <remarks>
            调用例子  
            
                Post /System/Menu
                   {
                     "name": "菜单XX",
                     "menuType": "系统菜单",
                     "parentID": -1,
                     "icon": "class",
                     "order_no": 1,
                     "url": "#"
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.UpdateMenu(System.Int32,PartyManage.ViewModels.System.MenuViewModel)">
            <summary>
            菜单修改
            </summary>
            <param name="menu">菜单模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /System/Menu/Id=1
                {   
                   "id":1,
                   "name": "菜单XX",
                   "menuType":"系统菜单",
                   "parentID": 2,
                   "icon": "class",
                   "order_no": 1,
                   "Url":"#"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.PatchMenu(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.System.MenuViewModel})">
            <summary>
            菜单部分内容修改
            </summary>
            <param name="patch">菜单部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /System/Menu/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/Name", "value" : "菜单XXX" },
                     { "op" : "replace", "path" : "/MenuType", "value" : "自定义菜单" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteMenu(System.Int32)">
            <summary>
            按菜单Id删除菜单
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /System/Menu/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.UploadMenuFile(System.Int32)">
            <summary>
            创建菜单对应附件
            </summary>
            <param name="Id">菜单Id</param>
            <remarks>
            调用例子  
            
                Post /System/Menu/UploadFile/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteMenuFile(System.Int32)">
            <summary>
            按菜单Id删除菜单附件
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /System/Menu/DeleteFile/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetMenuPermission">
            <summary>
            获取当前用户拥有权限的菜单
            </summary>
            <remarks>
            调用例子  
            
                Get /System/MenuPermissions
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.CreateMenuPermission(System.Collections.Generic.List{PartyManage.ViewModels.System.MenuPermissionViewModel})">
            <summary>
            创建菜单对应角色权限
            </summary>
            <param name="menuPermissions">菜单权限模型</param>
            <remarks>
            调用例子  
            
                Post /System/MenuPermission
                {
                   [
                     {
                       "menuID": 1,
                       "menuName": "菜单一",
                       "roleId": "XXXXX",
                       "roleName": "角色一"
                     },    
                    {
                       "menuID": 2,
                       "menuName": "菜单二",
                       "roleId": "XXXXX",
                       "roleName": "角色二"
                     }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteUserMemberDetail(System.Collections.Generic.List{PartyManage.ViewModels.System.MenuPermissionViewModel})">
            <summary>
            删除菜单对应角色权限
            </summary>
            <param name="menuPermissions">菜单权限模型</param>
            <remarks>
            调用例子  
            
                Delete /System/MenuPermission
                {
                   [
                     {
                       "menuID": 1,
                       "menuName": "菜单一",
                       "roleId": "XXXXX",
                       "roleName": "角色一"
                     },    
                    {
                       "menuID": 2,
                       "menuName": "菜单二",
                       "roleId": "XXXXX",
                       "roleName": "角色二"
                     }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetMenuPermissionList(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据菜单Id获取对应角色权限（分页）
            </summary>
            <param name="menuID">菜单Id</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /System/MenuPermission/MenuID=1/Page=1/PageSize=20
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetMenuPermissionById(System.Int32,System.String)">
            <summary>
            用menuID,roleId获取对应角色权限
            </summary>
            <param name="menuID">菜单Id</param>
            <param name="roleId">角色Id</param>
            <remarks>
            调用例子  
            
                Get /System/MenuPermission/MenuID={menuID}/RoleId={roleId}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetDictionaryByTextList(System.String,System.Int32,System.Int32)">
            <summary>
            获取字典信息（分页）,可加text查询
            </summary>
            <param name="text">字典名称</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /System/DictionaryList/Page=1/PageSize=20?text=XXX
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetDictionaryById(System.Int32)">
            <summary>
            根据id获取字典信息
            </summary>
            <param name="Id">字典Id</param>
            <remarks>
            调用例子  
            
                Get /System/Dictionary/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.CreateDictionary(PartyManage.ViewModels.System.DictionaryViewModel)">
            <summary>
            创建字典
            </summary>
            <param name="dictionary">字典模型</param>
            <remarks>
            调用例子  
            
                Post /System/Dictionary
                   {
                     "code": "XXX",
                     "text": "字典1"
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.UpdateDictionary(System.Int32,PartyManage.ViewModels.System.DictionaryViewModel)">
            <summary>
            字典修改
            </summary>
            <param name="dictionary">字典模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /System/Dictionary/Id=1
                {   
                   "id":1,
                   "code": "XXX",
                   "text": "字典1"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.PatchDictionary(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{PartyManage.ViewModels.System.DictionaryViewModel})">
            <summary>
            字典部分内容修改
            </summary>
            <param name="patch">字典部分模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子
               
                Patch /System/Dictionary/Id=1
                {  
                   [
                     { "op" : "replace", "path" : "/Code", "value" : "XXX" }
                   ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteDictionary(System.Int32)">
            <summary>
            按字典Id删除字典
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /System/Dictionary/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DictionaryDetailList(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据字典id获取字典实际值（分页）
            </summary>
            <param name="dictionaryId">字典编号</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /System/DictionaryDetailList/DictionaryId=1/Page=1/PageSize=20?code=XXX
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DictionaryDetailList(System.String,System.Int32,System.Int32)">
            <summary>
            根据字典code获取字典实际值（分页）
            </summary>
            <param name="code">字典编号</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /System/DictionaryDetailList/Page=1/PageSize=20?code=XXX
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetDictionaryDetailById(System.Int32)">
            <summary>
            根据id获取字典实际值信息
            </summary>
            <param name="Id">字典实际值Id</param>
            <remarks>
            调用例子  
            
                Get /System/DictionaryDetail/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.CreateDictionaryDetail(System.Collections.Generic.List{PartyManage.ViewModels.System.DictionaryDetailViewModel})">
            <summary>
            创建字典实际值信息
            </summary>
            <param name="dictionaryDetails">字典实际值模型</param>
            <remarks>
            调用例子  
            
                Post /System/DictionaryDetail
                   {
                     [
                        { "dictionaryID": 1,
                         "value": "字典实际值1"
                        },
                        { "dictionaryID": 2,
                         "value": "字典实际值2"
                        }            
                     ]
                   }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.UpdateDictionaryDetail(System.Collections.Generic.List{PartyManage.ViewModels.System.DictionaryDetailViewModel})">
            <summary>
            字典实际值修改
            </summary>
            <param name="dictionaryDetails">字典实际值模型</param>
            <remarks>
            调用例子  
            
                Put /System/DictionaryDetail
                {   
                     [
                        {"id":1, 
                         "dictionaryID": 1,
                         "value": "字典实际值1"
                        },
                        {"id":2,
                         "dictionaryID": 1,
                         "value": "字典实际值2"
                        }            
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteDictionaryDetail(System.Collections.Generic.List{System.Int32})">
            <summary>
            删除字典实际值
            </summary>
            <param name="ids">字典实际值id集合</param>
            <remarks>
            调用例子  
            
                Delete /System/DictionaryDetail
                {   
                     [
                        {"id":1 },
                        {"id":2 }    
                     ]
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetUserMemberByNameListAsync(System.String,System.Int32,System.Int32)">
            <summary>
            获取用户组信息（分页）,可加name查询
            </summary>
            <param name="name">用户组名称</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /System/UserMemberList/Page=1/PageSize=20?name=XXX
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetUserMemberById(System.Int32)">
            <summary>
            根据id获取用户组信息
            </summary>
            <param name="Id">用户组Id</param>
            <remarks>
            调用例子  
            
                Get /System/UserMember/Id={Id}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.CreateUserMember(PartyManage.ViewModels.System.UserMemberViewModel)">
            <summary>
            创建用户组
            </summary>
            <param name="userMember">用户组模型</param>
            <remarks>
            调用例子  
            
                Post /System/UserMember
                {
                  "name": "XXX"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.UpdateUserMember(System.Int32,PartyManage.ViewModels.System.UserMemberViewModel)">
            <summary>
            用户组修改
            </summary>
            <param name="userMember">用户组模型</param>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Put /System/UserMember/Id=1
                {   
                   "id":1,
                   "name": "XXX"
                }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteUserMember(System.Int32)">
            <summary>
            按用户组Id删除用户组
            </summary>
            <param name="Id">Id</param>
            <remarks>
            调用例子  
            
                Delete /System/UserMember/Id=1
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetUserMemberDetailList(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据用户组Id获取用户组成员（分页）
            </summary>
            <param name="userMemberId">用户组名称</param>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <remarks>
            调用例子  
            
                Get /System/UserMemberDetailList/UserMemberId=1/Page=1/PageSize=20
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.GetUserMemberDetailById(System.Int32,System.String)">
            <summary>
            用userMemberId,userId获取用户组成员信息
            </summary>
            <param name="userMemberId">用户组Id</param>
            <param name="userId">用户Id</param>
            <remarks>
            调用例子  
            
                Get /System/UserMemberDetail/userMemberId={userMemberId}/userId={userId}
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.CreateUserMemberDetail(System.Collections.Generic.List{PartyManage.ViewModels.System.UserMemberDetailViewModel})">
            <summary>
            创建用户组成员
            </summary>
            <param name="userMemberDetails">用户组成员模型</param>
            <remarks>
            调用例子  
            
                Post /System/UserMemberDetail
                {
                  [
                    { "UserMemberID": 1,
                      "UserMemberName":"用户组1",
                      "UserID": "XXX",
                      "UserName":"XXX"
                    },
                    { "UserMemberID": 1,
                      "UserMemberName":"用户组1",
                      "UserID": "XXX",
                      "UserName":"XXX"
                    },       
                  ]
                 }
            </remarks>
        </member>
        <member name="M:PartyManage.Controllers.SystemController.DeleteUserMemberDetail(System.Collections.Generic.List{PartyManage.ViewModels.System.UserMemberDetailViewModel})">
            <summary>
            删除用户组成员
            </summary>
            <param name="userMemberDetails">用户组成员模型</param>
            <remarks>
            调用例子  
            
                Delete /System/UserMemberDetail
                {   
                     [
                        { "UserMemberID": 1,
                          "UserMemberName":"用户组1",
                          "UserID": "XXX",
                          "UserName":"XXX"
                        },
                        { "UserMemberID": 1,
                          "UserMemberName":"用户组1",
                          "UserID": "XXX",
                          "UserName":"XXX"
                        },       
                     ]
                }
            </remarks>
        </member>
        <member name="P:PartyManage.ViewModels.Account.LoginViewModel.UserName">
            <summary>
            登陆名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.LoginViewModel.PasswordHash">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.LoginViewModel.RememberMe">
            <summary>
            是否记住用户
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.PasswordViewModel.UserName">
            <summary>
            登陆名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.PasswordViewModel.CurrentPassword">
            <summary>
            当前密码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.PasswordViewModel.NewPassword">
            <summary>
            新密码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.RoleViewModel.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.RoleViewModel.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.RoleViewModel.UsersCount">
            <summary>
            用户数
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.RoleViewModel.Permissions">
            <summary>
            权限许可
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserPatchViewModel.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserPatchViewModel.PhoneNumber">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserPatchViewModel.CommunityID">
            <summary>
            社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserPatchViewModel.IsEnabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.UserName">
            <summary>
            登陆名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.Name">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.PhoneNumber">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.CommunityID">
            <summary>
            社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.IsEnabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.IsLockedOut">
            <summary>
            是否锁定
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Account.UserViewModel.Roles">
            <summary>
            拥有角色
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.BaseModel.CreatedBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.BaseModel.UpdatedBy">
            <summary>
            更新者
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.BaseModel.CreatedDate">
            <summary>
            创建日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.BaseModel.UpdatedDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.ArmyViewModel.Id">
            <summary>
            家庭人员Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.ArmyViewModel.PersonName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.ArmyViewModel.ArmyType">
            <summary>
            参军类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.ArmyViewModel.JoinDate">
            <summary>
            入伍日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.ArmyViewModel.IsQuit">
            <summary>
            是否退伍
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.DisabilityViewModel.Id">
            <summary>
            家庭人员Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.DisabilityViewModel.PersonName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.DisabilityViewModel.CardNo">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.DisabilityViewModel.DisabilityType">
            <summary>
            残疾类别
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.DisabilityViewModel.DisabilityGrade">
            <summary>
            残疾等级
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventFileViewModel.EventID">
            <summary>
            事件Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventFileViewModel.Name">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventFileViewModel.EventType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.Id">
            <summary>
            事件Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.CommunityID">
            <summary>
            社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.CommunityName">
            <summary>
            社区名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.Name">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.HappenDate">
            <summary>
            发生日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.EventType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.Area">
            <summary>
            事件地点
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.Content">
            <summary>
            事件内容
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.IsSendMessage">
            <summary>
            是否发送短信
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.UserMemberID">
            <summary>
            短信通知用户组Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.EventViewModel.UserMemberName">
            <summary>
            用户组名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Id">
            <summary>
            家庭人员Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.PopulationID">
            <summary>
            网格登记表Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.PopulationCode">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.PersonName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.CardNo">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.BirthDate">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.PoliticalStatus">
            <summary>
            政治面貌
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Relation">
            <summary>
            关系
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.RegisteredResidence">
            <summary>
            户口类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.NativePlace">
            <summary>
            籍贯
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.PeopleType">
            <summary>
            民生类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Culture">
            <summary>
            文化程度
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Marriage">
            <summary>
            婚姻状况
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.FamilyViewModel.Rmks">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.Id">
            <summary>
            活动Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.CommunityID">
            <summary>
            社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.CommunityName">
            <summary>
            社区名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.Subject">
            <summary>
            活动主题
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.ActivitiesDate">
            <summary>
            活动时间 
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.ActivitiesPlace">
            <summary>
            活动地点
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.JoinAmount">
            <summary>
            应参加人数
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.RealAmount">
            <summary>
            实际参加人数
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.LeaveAmount">
            <summary>
            请假人数
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.Form">
            <summary>
            活动形式
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyActivitiesViewModel.Content">
            <summary>
            活动内容
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.Id">
            <summary>
            家庭人员Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.PersonName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.CardNo">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.PartyType">
            <summary>
            党员类别
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.JoinDate">
            <summary>
            入党时间 
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.PartyFrom">
            <summary>
            所属党支部 
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.Duties">
            <summary>
            职务
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PartyViewModel.IsFlow">
            <summary>
            是否流动党员
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.Id">
            <summary>
            网格登记表Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.Code">
            <summary>
            社区编号
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.CommunityID">
            <summary>
            社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.CommunityName">
            <summary>
            社区名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.Family_Type">
            <summary>
            家庭类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.Family_Address">
            <summary>
            家庭地址
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.Family_Phone">
            <summary>
            家庭电话
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.Business.PopulationViewModel.Family_Content">
            <summary>
            家庭情况
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.AlertID">
            <summary>
            所属通知Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.Content">
            <summary>
            通知内容
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.Url">
            <summary>
            通知转向URL
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.NoticeUserID">
            <summary>
            接收消息人Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.NoticeUserName">
            <summary>
            接收人
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.IsConsult">
            <summary>
            是否查阅
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertDetailViewModel.ConsultDate">
            <summary>
            查阅日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertViewModel.Id">
            <summary>
            通知Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertViewModel.Content">
            <summary>
            通知内容
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.AlertViewModel.Url">
            <summary>
            通知转向URL
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.BasicViewModel.Name">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.BasicViewModel.OutSoftwarePath">
            <summary>
            外接程序路径
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.BasicViewModel.FilePath">
            <summary>
            附件上传路径
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.BasicViewModel.LogPath">
            <summary>
            日志导出路径
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.BasicViewModel.FileMaxSize">
            <summary>
            允许上传的附件最大值
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.CommunityViewModel.Id">
            <summary>
            社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.CommunityViewModel.Name">
            <summary>
            社区名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.CommunityViewModel.ParentId">
            <summary>
            父社区Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryDetailViewModel.Id">
            <summary>
            字典详细值Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryDetailViewModel.DictionaryID">
            <summary>
            字典Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryDetailViewModel.DictionaryCode">
            <summary>
            字典代码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryDetailViewModel.DictionaryText">
            <summary>
            字典名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryDetailViewModel.Value">
            <summary>
            字典实际值
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryViewModel.Id">
            <summary>
            字典Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryViewModel.Code">
            <summary>
            字典代码
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.DictionaryViewModel.Text">
            <summary>
            字典名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.FileViewModel.FileID">
            <summary>
            文件Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.FileViewModel.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.FileViewModel.FilePath">
            <summary>
            附件路径
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.FileViewModel.FileSize">
            <summary>
            附件大小
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.FileViewModel.UploadPerson">
            <summary>
            上传人名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.FileViewModel.UploadDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.LogViewModel.Id">
            <summary>
            日志Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.LogViewModel.Content">
            <summary>
            操作内容
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.LogViewModel.UserName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.LogViewModel.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.LogViewModel.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuPermissionViewModel.MenuID">
            <summary>
            菜单Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuPermissionViewModel.MenuName">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuPermissionViewModel.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuPermissionViewModel.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.Id">
            <summary>
            菜单Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.MenuType">
            <summary>
            菜单类型
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.ParentID">
            <summary>
            父菜单Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.order_no">
            <summary>
            排序编号
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.Url">
            <summary>
            菜单对应URL
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.MenuViewModel.FileID">
            <summary>
            菜单对应的附件id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.UserMemberDetailViewModel.UserMemberID">
            <summary>
            用户组Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.UserMemberDetailViewModel.UserMemberName">
            <summary>
            用户组名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.UserMemberDetailViewModel.UserID">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.UserMemberDetailViewModel.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.UserMemberViewModel.Id">
            <summary>
            用户组Id
            </summary>
        </member>
        <member name="P:PartyManage.ViewModels.System.UserMemberViewModel.Name">
            <summary>
            用户组名称
            </summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXJavascript">
            <summary>Used to denote the encoding necessary for files containing JavaScript source code. The alternative MIME type for this file type is text/javascript.</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioL24">
            <summary>24bit Linear PCM audio at 8-48kHz, 1-N channels; Defined in RFC 3190</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXShockwaveFlash">
            <summary>Adobe Flash files for example with the extension .swf</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationOctetStream">
            <summary>Arbitrary binary data.[5] Generally speaking this type identifies files that are not associated with a specific application. Contrary to past assumptions by software packages such as Apache this is not a type that should be applied to unknown files. In such a case, a server or application should not indicate a content type, as it may be incorrect, but rather, should omit the type in order to allow the recipient to guess the type.[6]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationAtomXml">
            <summary>Atom feeds</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextCss">
            <summary>Cascading Style Sheets; Defined in RFC 2318</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextCmd">
            <summary>commands; subtype resident in Gecko browsers like Firefox 3.5</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextCsv">
            <summary>Comma-separated values; Defined in RFC 4180</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXDeb">
            <summary>deb (file format), a software package format used by the Debian project</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MultipartEncrypted">
            <summary>Defined in RFC 1847</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MultipartSigned">
            <summary>Defined in RFC 1847</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MessageHttp">
            <summary>Defined in RFC 2616</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelExample">
            <summary>Defined in RFC 4735</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXDvi">
            <summary>device-independent document in DVI format</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXmlDtd">
            <summary>DTD files; Defined by RFC 3023</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationJavascript">
            <summary>
            ECMAScript/JavaScript; Defined in RFC 4329 (equivalent to application/ecmascript but with looser processing rules) It is not accepted in IE 8 or earlier - text/javascript is accepted but it is defined as obsolete in RFC 4329. The "type" attribute of the 
            script tag in HTML5 is optional and in practice omitting the media type of JavaScript programs is the most interoperable solution since all browsers have always assumed the correct default even before HTML5.
            </summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationEcmascript">
            <summary>ECMAScript/JavaScript; Defined in RFC 4329 (equivalent to application/javascript but with stricter processing rules)</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationEdifact">
            <summary>EDI EDIFACT data; Defined in RFC 1767</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationEdiX12">
            <summary>EDI X12 data; Defined in RFC 1767</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MessagePartial">
            <summary>Email; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MessageRfc822">
            <summary>Email; EML files, MIME files, MHT files, MHTML files; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextXml">
            <summary>Extensible Markup Language; Defined in RFC 3023</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXml">
            <summary>Extensible Markup Language; Defined in RFC 3023</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoXFlv">
            <summary>Flash video (FLV files)</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImageGif">
            <summary>GIF image; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextXGwtRpc">
            <summary>GoogleWebToolkit data</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXGzip">
            <summary>Gzip</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextHtml">
            <summary>HTML; Defined in RFC 2854</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImageVndMicrosoftIcon">
            <summary>ICO image; Registered[9]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelIges">
            <summary>IGS files, IGES files; Defined in RFC 2077</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MessageImdnXml">
            <summary>IMDN Instant Message Disposition Notification; Defined in RFC 5438</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationJson">
            <summary>JavaScript Object Notation JSON; Defined in RFC 4627</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationJsonPatch">
            <summary>JavaScript Object Notation (JSON) Patch; Defined in RFC 6902</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextJavascript">
            <summary>JavaScript - Defined in and obsoleted by RFC 4329 in order to discourage its usage in favor of application/javascript. However,text/javascript is allowed in HTML 4 and 5 and, unlike application/javascript, has cross-browser support. The "type" attribute of the script tag in HTML5 is optional and there is no need to use it at all since all browsers have always assumed the correct default (even in HTML 4 where it was required by the specification).</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImagePjpeg">
            <summary>JPEG JFIF image; Associated with Internet Explorer; Listed in ms775147(v=vs.85) - Progressive JPEG, initiated before global browser support for progressive JPEGs (Microsoft and Firefox).</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImageJpeg">
            <summary>JPEG JFIF image; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextXJqueryTmpl">
            <summary>jQuery template data</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndGoogleEarthKmlXml">
            <summary>KML files (e.g. for Google Earth)</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXLatex">
            <summary>LaTeX files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoXMatroska">
            <summary>Matroska open media format</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet">
            <summary>Microsoft Excel 2007 files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndMsExcel">
            <summary>Microsoft Excel files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOpenxmlformatsOfficedocumentPresentationmlPresentation">
            <summary>Microsoft Powerpoint 2007 files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndMsPowerpoint">
            <summary>Microsoft Powerpoint files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlDocument">
            <summary>Microsoft Word 2007 files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationMsword">
            <summary>Microsoft Word files[15]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MultipartAlternative">
            <summary>MIME Email; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MultipartMixed">
            <summary>MIME Email; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MultipartRelated">
            <summary>MIME Email; Defined in RFC 2387 and used by MHTML (HTML mail)</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.MultipartFormData">
            <summary>MIME Webform; Defined in RFC 2388</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndMozillaXulXml">
            <summary>Mozilla XUL files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioMpeg">
            <summary>MP3 or other MPEG audio; Defined in RFC 3003</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioMp4">
            <summary>MP4 audio</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoMp4">
            <summary>MP4 video; Defined in RFC 4337</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoMpeg">
            <summary>MPEG-1 video with multiplexed audio; Defined in RFC 2045 and RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelMesh">
            <summary>MSH files, MESH files; Defined in RFC 2077, SILO files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioBasic">
            <summary>mulaw audio at 8 kHz, 1 channel; Defined in RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoOgg">
            <summary>Ogg Theora or other video (with audio); Defined in RFC 5334</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioOgg">
            <summary>Ogg Vorbis, Speex, Flac and other audio; Defined in RFC 5334</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationOgg">
            <summary>Ogg, a multimedia bitstream container format; Defined in RFC 5334</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXopXml">
            <summary>OP</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOasisOpendocumentGraphics">
            <summary>OpenDocument Graphics; Registered[14]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOasisOpendocumentPresentation">
            <summary>OpenDocument Presentation; Registered[13]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOasisOpendocumentSpreadsheet">
            <summary>OpenDocument Spreadsheet; Registered[12]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationVndOasisOpendocumentText">
            <summary>OpenDocument Text; Registered[11]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXPkcs12">
            <summary>p12 files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXPkcs7Certificates">
            <summary>p7b and spc files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXPkcs7Mime">
            <summary>p7c files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXPkcs7Certreqresp">
            <summary>p7r files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXPkcs7Signature">
            <summary>p7s files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationPdf">
            <summary>Portable Document Format, PDF has been in use for document exchange on the Internet since 1993; Defined in RFC 3778</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImagePng">
            <summary>Portable Network Graphics; Registered,[8] Defined in RFC 2083</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationPostscript">
            <summary>PostScript; Defined in RFC 2046</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoQuicktime">
            <summary>QuickTime video; Registered[10]</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXRarCompressed">
            <summary>RAR archive files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioVndRnRealaudio">
            <summary>RealAudio; Documented in RealPlayer Customer Support Answer 2559</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationRdfXml">
            <summary>Resource Description Framework; Defined by RFC 3870</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationRssXml">
            <summary>RSS feeds</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationSoapXml">
            <summary>SOAP; Defined by RFC 3902</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXStuffit">
            <summary>StuffIt archive files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImageSvgXml">
            <summary>SVG vector image; Defined in SVG Tiny 1.2 Specification Appendix M</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ImageTiff">
            <summary>Tag Image File Format (only for Baseline TIFF); Defined in RFC 3302</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXTar">
            <summary>Tarball files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextPlain">
            <summary>Textual data; Defined in RFC 2046 and RFC 3676</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXFontTtf">
            <summary>TrueType Font No registered MIME type, but this is the most commonly used</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.TextVcard">
            <summary>vCard (contact information); Defined in RFC 6350</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioVorbis">
            <summary>Vorbis encoded audio; Defined in RFC 5215</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioVndWave">
            <summary>WAV audio; Defined in RFC 2361</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationFontWoff">
            <summary>Web Open Font Format; (candidate recommendation; use application/x-font-woff until standard is official)</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoWebm">
            <summary>WebM Matroska-based open media format</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioWebm">
            <summary>WebM open media format</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioXMsWax">
            <summary>Windows Media Audio Redirector; Documented in Microsoft help page</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.AudioXMsWma">
            <summary>Windows Media Audio; Documented in Microsoft KB 288102</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.VideoXMsWmv">
            <summary>Windows Media Video; Documented in Microsoft KB 288102</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelVrml">
            <summary>WRL files, VRML files; Defined in RFC 2077</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelX3DXml">
            <summary>X3D ISO standard for representing 3D computer graphics, X3D XML files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelX3DBinary">
            <summary>X3D ISO standard for representing 3D computer graphics, X3DB binary files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ModelX3DVrml">
            <summary>X3D ISO standard for representing 3D computer graphics, X3DV VRML files</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationXhtmlXml">
            <summary>XHTML; Defined by RFC 3236</summary>
        </member>
        <member name="F:PartyManage.Helpers.MediaTypeNames.ApplicationZip">
            <summary>ZIP archive files; Registered[7]</summary>
        </member>
    </members>
</doc>
